public class Variable
{
	//局部变量根据定义形式的不同, 又分为以下三种
	//1形参:在定义方法签名时定义的变量, 形参的作用域在整个方法内有效.形参无须显示初始化, 形参的初始化在调用该方法时由系统完成.当通过类或者对象调用某个方法时, 系统会在该方法栈内为所有形参分配内存空间, 并将实参的值赋给对应的形参, 这就完成了形参的初始化.
	//2方法局部变量:在方法体内定义的局部变量, 方法局部变量的作用域在定义该局部变量的地方生效, 在方法结束时失效.
	//3代码块局部变量:在代码块内定义的局部变量, 代码块局部变量的作用域在定义该变量的地方生效, 在代码块结束时失效.
	//局部变量除了形参之外, 都必须显示初始化. 也就是说, 必须先给方法局部变量和代码块局部变量指定初始值, 否则不可以访问.
	//java允许局部变量和成员变量同名, 如果方法里的局部变量和成员变量同名, 则局部变量会覆盖成员变量, 如果需要在这个方法里引用被覆盖的成员变量, 则可使用this(对实例属性)或类名(对类属性)作为调用来限定访问成员变量.
	public static void main(String[] args)
	{
		{
			//定义一个代码块局部变量
			int a;
			//下面代码将出现错误, 因为变量a还未初始化
			// System.out.println(a);
			//为a变量赋初值, 也就是进行初始化
			a = 5;
			System.out.println("代码块局部变量a的值:" + a);
		}
		//下面试图访问的a变量并不存在
		// System.out.println(a);
	}
}